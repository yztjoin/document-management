[1]
我的 github 地址: https://github.com/sl1673495

[2]
我的 blog 地址: https://github.com/sl1673495/blogs

[3]
写给女朋友的中级前端面试秘籍: https://juejin.im/post/5e7af0685188255dcf4a497e

[4]
JavaScript 深入系列、JavaScript 专题系列、ES6 系列: https://github.com/mqyqingfeng/Blog

[5]
tasks-microtasks-queues-and-schedules: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules

[6]
Promise A+ 英文文档: http://promisesaplus.com

[7]
剖析 Promise 内部结构，一步一步实现一个完整的、能通过所有 Test case 的 Promise 类: https://github.com/xieranmaya/blog/issues/3

[8]
最简实现 Promise，支持异步链式调用（20 行）: https://juejin.im/post/5e6f4579f265da576429a907

[9]
手写 async await 的最简实现（20 行搞定）: https://juejin.im/post/5e79e841f265da5726612b6e

[10]
axios 的源码: https://github.com/axios/axios/blob/e50a08b2c392c6ce3b5a9dc85ebc860d50414529/lib/core/Axios.js#L49-L62

[11]
ES6 系列之 Babel 将 Generator 编译成了什么样子: https://github.com/mqyqingfeng/Blog/issues/102

[12]
Callback Promise Generator Async-Await 和异常处理的演进: https://juejin.im/post/589036f8570c3500621a3be2

[13]
Koa 的洋葱中间件，Redux 的中间件，Axios 的拦截器让你迷惑吗？实现一个精简版的就彻底搞懂了。: https://juejin.im/post/5e13ea6a6fb9a0482b297e8e

[14]
设计模式小册: https://user-gold-cdn.xitu.io/2020/5/6/171e6247f6ea460a?w=750&h=1334&f=png&s=679081

[15]
LeetCode 真题课程: https://coding.imooc.com/class/82.html

[16]
JavaScript 版题解仓库: https://github.com/sl1673495/leetcode-javascript/issues

[17]
clean-code-javascript: https://github.com/beginor/clean-code-javascript

[18]
vue-promised: https://github.com/posva/vue-promised

[19]
confirm 组件: https://github.com/sl1673495/vue-netease-music/blob/master/src/base/confirm.vue

[20]
复杂的音乐表格需求: https://juejin.im/post/5d40fa605188255d2e32c929

[21]
Vue 源码详解之 nextTick：MutationObserver 只是浮云，microtask 才是核心！: https://segmentfault.com/a/1190000008589736

[22]
探索 Vue 高阶组件 | HcySunYang: https://segmentfault.com/p/1210000012743259/read

[23]
Vue 进阶必学之高阶组件 HOC: https://juejin.im/post/5e8b5fa6f265da47ff7cc139

[24]
vuex-error-plugin: https://github.com/sl1673495/vuex-error-plugin/blob/master/plugin.js

[25]
vue-router-advanced: https://github.com/vuejs/vue-router/tree/dev/docs/zh/guide/advanced

[26]
网上都说操作真实 DOM 慢，但测试结果却比 React 更快，为什么？: https://www.zhihu.com/question/31809713/answer/53544875

[27]
Vue.js 源码全方位深入解析 （含 Vue3.0 源码分析）: https://coding.imooc.com/class/228.html

[28]
Vue 逐行级别的源码分析: https://github.com/HcySunYang/vue-design

[29]
组件的本质: http://hcysun.me/vue-design/zh/essence-of-comp.html#%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BA%A7%E5%87%BA%E6%98%AF%E4%BB%80%E4%B9%88

[30]
Vue3 究竟好在哪里？（和 React Hook 的详细对比）: https://juejin.im/post/5e9ce011f265da47b8450c11

[31]
带你彻底搞懂 Vue3 的 Proxy 响应式原理！TypeScript 从零实现基于 Proxy 的响应式库。: https://juejin.im/post/5e21196fe51d454d523be084

[32]
带你彻底搞懂 Vue3 的 Proxy 响应式原理！基于函数劫持实现 Map 和 Set 的响应式: https://juejin.im/post/5e23b20f51882510073eb571

[33]
深度解析：Vue3 如何巧妙的实现强大的 computed: https://juejin.im/post/5e2fdf29e51d45026866107d

[34]
40 行代码把 Vue3 的响应式集成进 React 做状态管理: https://juejin.im/post/5e70970af265da576429aada

[35]
React.js 小书: http://huziketang.mangojuice.top/books/react

[36]
React 组合式开发实践：打造企业管理系统五大核心模块: https://juejin.im/book/5b1e15f76fb9a01e516d14a0

[37]
React Hooks 与 Immutable 数据流实战: https://juejin.im/book/5da96626e51d4524ba0fd237

[38]
understanding-reacts-key-prop: https://kentcdodds.com/blog/understanding-reacts-key-prop

[39]
react 中为何推荐设置 key: https://zhuanlan.zhihu.com/p/112917118

[40]
you-probably-dont-need-derived-state: https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html

[41]
useEffect 完整指南: https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/

[42]
dan 的博客主页: https://overreacted.io/zh-hans

[43]
096.精读《useEffect 完全指南》.md: https://github.com/dt-fe/weekly/blob/v2/096.%E7%B2%BE%E8%AF%BB%E3%80%8AuseEffect%20%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E3%80%8B.md

[44]
函数式组件与类组件有何不同？: https://overreacted.io/zh-hans/how-are-function-components-different-from-classes/

[45]
精读《Hooks 取数 - swr 源码》: https://segmentfault.com/a/1190000020964640

[46]
Umi Hooks - 助力拥抱 React Hooks: https://zhuanlan.zhihu.com/p/103150605?utm_source=wechat_session

[47]
React Hooks 的体系设计之一 - 分层: https://zhuanlan.zhihu.com/p/106665408

[48]
optimize-react-re-renders: https://kentcdodds.com/blog/optimize-react-re-renders

[49]
如何对 React 函数式组件进行优化: https://juejin.im/post/5dd337985188252a1873730f

[50]
Introducing The React Testing Library: https://kentcdodds.com/blog/introducing-the-react-testing-library

[51]
Testing Implementation Details: https://kentcdodds.com/blog/testing-implementation-details

[52]
how-to-test-custom-react-hooks: https://kentcdodds.com/blog/how-to-test-custom-react-hooks

[53]
react-typescript-cheatsheet: https://github.com/typescript-cheatsheets/react-typescript-cheatsheet

[54]
React + Typescript 工程化治理实践: https://juejin.im/post/5dccc9b8e51d4510840165e2

[55]
Writing Type-Safe Polymorphic React Components (Without Crashing TypeScript): https://blog.andrewbran.ch/polymorphic-react-components/

[56]
10-typescript-pro-tips-patterns-with-or-without-react: https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680

[57]
when-to-break-up-a-component-into-multiple-components: https://kentcdodds.com/blog/when-to-break-up-a-component-into-multiple-components

[58]
state-colocation-will-make-your-react-app-faster: https://kentcdodds.com/blog/state-colocation-will-make-your-react-app-faster/

[59]
dont-sync-state-derive-it: https://kentcdodds.com/blog/dont-sync-state-derive-it

[60]
the-state-reducer-pattern-with-react-hooks: https://kentcdodds.com/blog/the-state-reducer-pattern-with-react-hooks

[61]
TypeScript Handbook 入门教程 : https://zhongsp.gitbooks.io/typescript-handbook/content/

[62]
TypeScript Deep Dive: https://basarat.gitbook.io/typescript/type-system

[63]
TS 一些工具泛型的使用及其实现: https://zhuanlan.zhihu.com/p/40311981

[64]
基于 TypeScript 从零重构 axios: https://coding.imooc.com/class/330.html

[65]
巧用 TypeScript 系列 一共五篇: https://juejin.im/post/5c8a518ee51d455e4d719e2e

[66]
conditional-types-in-typescript: https://mariusschulz.com/blog/conditional-types-in-typescript

[67]
TypeScript 参数简化实战: https://juejin.im/post/5e38dd65518825492b509dd6

[68]
Advanced Type: https://www.typescriptlang.org/docs/handbook/advanced-types.html

[69]
Generics: https://www.typescriptlang.org/docs/handbook/generics.html

[70]
Vue3 源码里 infer 的一个很重要的使用: https://github.com/vuejs/vue-next/blob/985f4c91d9d3f47e1314d230c249b3faf79c6b90/packages/reactivity/src/ref.ts#L89

[71]
TS 实现智能类型推导的简化版 Vuex: https://juejin.im/post/5e38dd65518825492b509dd6

[72]
TypeScript 的有趣代码: https://github.com/sl1673495/typescript-codes

[73]
Vue3 跟着尤雨溪学 TypeScript 之 Ref 类型从零实现: https://juejin.im/post/5e94595c6fb9a03c341daa75

[74]
力扣面试题: https://github.com/LeetCode-OpenSource/hire/blob/master/typescript_zh.md

[75]
integrating-prettier-eslint-airbnb-style-guide-in-vscode: https://blog.echobind.com/integrating-prettier-eslint-airbnb-style-guide-in-vscode-47f07b5d7d6a

[76]
在项目中集成 ESLint with Prettier, TypeScript: https://levelup.gitconnected.com/setting-up-eslint-with-prettier-typescript-and-visual-studio-code-d113bbec9857

[77]
嵇智: https://github.com/theniceangel

[78]
如何重构一个过万 Star 开源项目—BetterScroll: https://juejin.im/post/5e40f72df265da5732551bdf

[79]
[译]如何撰写 Git 提交信息: https://jiongks.name/blog/git-commit

[80]
Git-Commit-Log 规范（Angular 规范）: https://www.jianshu.com/p/c7e40dab5b05

[81]
commitizen: https://www.npmjs.com/package/commitizen

[82]
深入浅出 webpack: http://www.xbhub.com/wiki/webpack/

[83]
webpack 系列之一总览: https://github.com/DDFE/DDFE-blog/issues/36

[84]
性能优化小册: https://user-gold-cdn.xitu.io/2020/5/6/171e625d5fe327af?w=750&h=1334&f=png&s=807503

[85]
user-centric-performance-metrics: https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics

[86]
详谈层合成（composite）: https://juejin.im/entry/59dc9aedf265da43200232f9

[87]
让你的网页更丝滑: https://zhuanlan.zhihu.com/p/66398148

[88]
Why remove time slicing from vue3?: https://github.com/vuejs/rfcs/issues/89

[89]
Amendment proposal to Function-based Component API: https://github.com/vuejs/rfcs/issues/63

[90]
vue-composition-api-rfc: https://vue-composition-api-rfc.netlify.com/#summary

[91]
Vue3 Composition-Api + TypeScript + 新型状态管理模式探索。: https://juejin.im/post/5e0da5606fb9a048483ecf64

[92]
vue-bookshelf: https://github.com/sl1673495/vue-bookshelf

[93]
detailed-design: https://vue-composition-api-rfc.netlify.com/#detailed-design

[94]
你的 Tree-Shaking 并没什么卵用: https://zhuanlan.zhihu.com/p/32831172

[95]
UglifyJS 的 Issue: https://github.com/mishoo/UglifyJS2/issues/1261

[96]
英文技术文章阅读: https://github.com/sl1673495/blogs/issues/15

[97]
dev.to: https://dev.to/t/javascript

[98]
medium: https://medium.com